# -*- coding: utf-8 -*-
"""LVADSUSR198.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rJ24eGqTAyLyzoZ3wYwKaD1-rwnn4Tz8
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

##1
df_ipl = pd.read_csv('/content/Final Dataset - IPL.csv')
df_ipl

##2
df_ipl.info()
df_ipl.shape
## We have columns with int data and the other 13 as str or object
## total shape is 74 rows and 30 columns
df_ipl

##3
print('Missing values\n')
print(df_ipl.isna().sum())
##The data set has no missing values

print('Duplicate values')
df_ipl.duplicated().sum()

##4
print('MEAN')
print("First Innings score",df_ipl['first_ings_score'].astype(int).mean())
print('first_ings_wkts mean',df_ipl['first_ings_wkts'].mean())
print('second_ings_score mean',df_ipl['second_ings_score'].mean())
print('second_ings_score mean',df_ipl['second_ings_wkts'].mean())
print('margin mean',df_ipl['margin'].mean())
print('highscore  mean',df_ipl['highscore'].mean())

print('Median')
print("First Innings score",df_ipl['first_ings_score'].astype(int).median())
print('first_ings_wkts',df_ipl['first_ings_wkts'].median())
print('second_ings_score ',df_ipl['second_ings_score'].median())
print('second_ings_score',df_ipl['second_ings_wkts'].median())
print('margin ',df_ipl['margin'].median())
print('highscore',df_ipl['highscore'].median())


print('Mode')
print("First Innings score",df_ipl['first_ings_score'].astype(int).mode())
print('first_ings_wkts',df_ipl['first_ings_wkts'].mode())
print('second_ings_score ',df_ipl['second_ings_score'].mode())
print('second_ings_score',df_ipl['second_ings_wkts'].mode())
print('margin ',df_ipl['margin'].mode())
print('highscore',df_ipl['highscore'].mode())


print('Standard Deviation')
print("First Innings score",df_ipl['first_ings_score'].astype(int).std())
print('first_ings_wkts',df_ipl['first_ings_wkts'].std())
print('second_ings_score ',df_ipl['second_ings_score'].std())
print('second_ings_score',df_ipl['second_ings_wkts'].std())
print('margin ',df_ipl['margin'].std())
print('highscore',df_ipl['highscore'].std())


print('Variance')
print("First Innings score",df_ipl['first_ings_score'].astype(int).var())
print('first_ings_wkts',df_ipl['first_ings_wkts'].var())
print('second_ings_score ',df_ipl['second_ings_score'].var())
print('second_ings_score',df_ipl['second_ings_wkts'].var())
print('margin ',df_ipl['margin'].var())
print('highscore',df_ipl['highscore'].var())


print('Range')
print("First Innings score",df_ipl['first_ings_score'].astype(int).max()-df_ipl['first_ings_score'].astype(int).min())
print('first_ings_wkts',df_ipl['first_ings_wkts'].max()-df_ipl['first_ings_wkts'].min())
print('second_ings_score ',df_ipl['second_ings_score'].max()-df_ipl['second_ings_score'].min())
print('second_ings_score',df_ipl['second_ings_wkts'].max()-df_ipl['second_ings_wkts'].min())
print('margin ',df_ipl['margin'].max()-df_ipl['margin'].min())
print('highscore',df_ipl['highscore'].max()-df_ipl['highscore'].min())

##4
##PIE
df_m = df_ipl.groupby('match_winner').match_id.count()
print(df_m)
plt.title('Matches Won by teams')
plt.pie(df_m,labels=[x for x in df_m.index])

##

plt.title('Winning teams way of winning ')
df_ipl.groupby(['match_winner','won_by']).match_id.count().plot(kind = 'bar',stacked = True)

top_pl=df_ipl.groupby('player_of_the_match').match_id.count().reset_index().sort_values('match_id',ascending = False).head(5)

top_pl.plot(x='player_of_the_match',kind='bar')
plt.title('No of times the player won player of the match')

sns.scatterplot(x=df_ipl['first_ings_score'],y=df_ipl['highscore'],data=df_ipl)
plt.title('Relation between highscore and first innings score')

df_ipl['match_winner'].hist()
plt.xticks(rotation = 90)

sns.boxplot(x=df_ipl['first_ings_score'],y=df_ipl['second_ings_score'],data=df_ipl)
plt.xticks(rotation = 90)

df_ipl.plot(x='match_id',y='first_ings_score',kind='line')

##5
df_ipl_num = df_ipl[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','margin','highscore']]
df_ipl_num.corr()

## first innings and second innings scoere are positively corelated with a score of 0.7

##6
## No outliers are detected in the first inngs and second ining score
df_outliers = df_ipl[((df_ipl['first_ings_score']-df_ipl['first_ings_score'].mean())/df_ipl['first_ings_score'].std()) <=3]
df_outliers = df_outliers[((df_outliers['second_ings_score']-df_outliers['second_ings_score'].mean())/df_outliers['second_ings_score'].std()) <=3]
df_outliers_removed = df_outliers[((df_outliers['margin']-df_outliers['margin'].mean())/df_outliers['margin'].std()) <=3]

sns.boxplot(df_ipl_num)
plt.xticks(rotation =90)

sns.boxplot(df_outliers['margin'])
plt.xticks(rotation =90)

##7

ab1 = df_outliers_removed.groupby(['match_winner','venue','top_scorer']).first_ings_score.sum().sort_values(ascending = False).head(10)
# ab1.sort_values(ascending = False)
ab1.plot(x=ab1.index,kind = 'bar')
print(ab1)

##top 10 high scores we can see Brabounre and DR DY patil venues in the top 10 scores

df_outliers_removed.groupby(['team1','team2','match_winner','venue']).size().sort_values(ascending =False).head(10)

##8
top_pl=df_outliers.groupby('player_of_the_match').sum('first_ings_score').reset_index()
top_s = top_pl.sort_values('highscore',ascending = False).head(5)
print(top_s)
top_s.plot(x='player_of_the_match',kind='bar',stacked = True)

df_outliers.groupby(['player_of_the_match','best_bowling','match_winner']).sum('highscore').sort_values('highscore',ascending=False)



"""

*    Based on the analysis above we could observe that the venue DY patil is always on the top 10 , 3 times in the winning teams
*   Coming to the top players we could see that Josh Butler had the highest score when compared to all the players but with the help of a stacked bar chart we could go a little further and found that the overall better score is Kuldeep Yadav when compared to all , his scores in innings ,wickets and bowling all the stats are good over all


*   Its observed that highest scores have been achieved in the Brabourne stadium
*   Gujarat has won most of the matches with a count of 12 , followed by Rajasthan with 10.


*   With the help of corelation we could find that first innings and second innings are positively corelated by 0.7 so theres a 70% chance if the first innings went well for the team they would do good in the second innings.
*   Gujarat has won most of the matches by wickets.






  """