# -*- coding: utf-8 -*-
"""LVADSUSR198_VishalRao_IA-2_Lab-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10MNZa-OJ_KPz2EpGFerFpE46UvBgRSYJ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler,LabelEncoder

import seaborn as sns

df= pd.read_csv('/content/Mall_Customers.csv')

df.info()

df.isna().sum()
df['Annual Income (k$)'] = df['Annual Income (k$)'].fillna(df['Annual Income (k$)'].mean())
df.isna().sum()

sns.pairplot(df)

sns.boxplot(df['Annual Income (k$)'])

sns.boxplot(df['Spending Score (1-100)'])

df.drop('CustomerID',axis = 1 , inplace = True)

##Encoding
enc = LabelEncoder()
df['Gender'] = enc.fit_transform(df['Gender'])
df

##Scaling
scale = StandardScaler()
df_scaled = scale.fit_transform(df)

a=[]
K=range(1,10)
for i in K:
    kmean=KMeans(n_clusters=i)
    kmean.fit(df)
    a.append(kmean.inertia_)

plt.plot(K,a,marker='o')
plt.title('Elbow Method',fontsize=15)
plt.xlabel('Number of clusters',fontsize=15)
plt.ylabel('Squared distance',fontsize=15)
plt.show()

## k = 4
## on the normal dataset
kmean = KMeans(n_clusters = 4,random_state = 111)
kmean.fit(df)

##scaled dataa
kmean_scale = KMeans(n_clusters = 4,random_state = 111)
kmean_scale.fit(df_scaled)

print(metrics.silhouette_score(df_scaled, kmean_scale.labels_))
print(metrics.silhouette_score(df, kmean.labels_))

##normal data
cluster_labels = kmean.fit_predict(df)
preds = kmean.labels_
kmeans_df = pd.DataFrame(df)
kmeans_df['KMeans_Clusters'] = preds
kmeans_df.head(10)

##scaled data
cluster_labels_scale = kmean_scale.fit_predict(df_scaled)
preds = kmean_scale.labels_
kmeanscale_df = pd.DataFrame(df_scaled)
kmeanscale_df['KMeans_Clusters'] = preds
kmeanscale_df.head(10)

plt.scatter(df['Annual Income (k$)'],df['Spending Score (1-100)'],c =cluster_labels )

