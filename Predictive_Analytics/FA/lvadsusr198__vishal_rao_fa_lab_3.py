# -*- coding: utf-8 -*-
"""LVADSUSR198 _Vishal Rao_FA_lab-3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iw1V-QajafseS7vRxSpT3op2V0XZoAox
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler,LabelEncoder
import seaborn as sns

df= pd.read_csv('/content/customer_segmentation.csv')
df

df.shape
df.isna().sum()

df

## treating missing value

df['Income'] = df['Income'].fillna(df['Income'].mean())
df.isna().sum()

df_num = df.select_dtypes(include=np.number)
df_num.drop('ID',axis = 1, inplace = True)

df_num

for i in df_num.columns.to_list():
  sns.boxplot(df[i])
  plt.show()

for i in df_num.columns.to_list():
  Q1 = df[i].quantile(0.25)
  Q3 = df[i].quantile(0.75)
  IQR = Q3 - Q1

  # identify outliers
  threshold = 1.5
  outliers = df[(df[i] < Q1 - threshold * IQR) | (df[i] > Q3 + threshold * IQR)]
  outliers[i].index
  df_out[i] = df.drop(outliers[i].index)
df_out

sns.heatmap(df_num.corr(),annot = True)

df_num.shape

df_num.drop('Year_Birth',inplace = True, axis = 1)

#scaling data
scaling=StandardScaler()
scaled=scaling.fit_transform(df_num)
scaled_df=pd.DataFrame(scaled,columns=df_num.columns)

# plot elbow curve

a=[]
K=range(1,10)
for i in K:
    kmean=KMeans(n_clusters=i)
    kmean.fit(df_num)
    a.append(kmean.inertia_)

plt.plot(K,a,marker='o')
plt.title('Elbow Method',fontsize=15)
plt.xlabel('Number of clusters',fontsize=15)
plt.ylabel('Sum of Squared distance',fontsize=15)
plt.show()

kmeans = KMeans(n_clusters = 3,random_state = 111)
kmeans.fit(df_num)
# plt.scatter(df,c=kmeans.labels_)
# plt.show()
pd.Series(kmeans.labels_).value_counts()

cluster_labels = kmeans.fit_predict(df_num)
preds = kmeans.labels_
kmeans_df = pd.DataFrame(df_num)
kmeans_df['KMeans_Clusters'] = preds
kmeans_df.head(10)

metrics.silhouette_score(df_num, kmeans.labels_)

plt.scatter(df_num['Income'],df['Recency'] ,c = kmeans.labels_)

"""##based on the cluster wrt income and recency we could see that the clusters low income and recency , cluster 2 mid inciome and recency and 3rd cluster high and recency"""