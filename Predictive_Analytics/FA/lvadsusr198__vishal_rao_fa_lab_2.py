# -*- coding: utf-8 -*-
"""LVADSUSR198 _Vishal Rao_FA_lab-2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mEZb2yVfrniZRS08X4eHFmLbpszKF0is
"""

import numpy as np
import pandas as pd
from sklearn import metrics

from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
import seaborn as sns
from sklearn.preprocessing import OneHotEncoder, LabelEncoder,StandardScaler
import matplotlib.pyplot as plt

# Modelling
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, ConfusionMatrixDisplay
from sklearn.tree import export_graphviz
from IPython.display import Image
import graphviz

df= pd.read_csv('/content/penguins_classification.csv')
df
df.dropna()
df.shape

##Pre Processing
df.info()
print(df.isna().sum())
## No missing values
print(df.duplicated().sum())
## the data does not have any duplicated values

sns.histplot(df['island'])

sns.histplot(df['species'])

df_num = df.select_dtypes(include=np.number)
df_num

enc = LabelEncoder()
df['species'] = enc.fit_transform(df['species'])
df['island'] = enc.fit_transform(df['island'])
df_num.shape

sns.heatmap(df_num.corr(),annot=True)

for i in df.columns.to_list():
  sns.boxplot(df[i])
  plt.show()

##Not much of outliers

df['bill_depth_mm'].isna().sum()
df.dropna(inplace = True)

y = df['species']
x = df.drop('species' , axis = 1)

X_train,X_test,y_train,y_test = train_test_split(x,y,train_size = 0.8)

scale = StandardScaler()
x_train_scale = scale.fit_transform(X_train)
x_test_scale =scale.fit_transform(X_test)

model = RandomForestClassifier()
model.fit(x_train_scale, y_train)

y_pred = model.predict(x_test_scale)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

print("Confusion Matrix: ",
confusion_matrix(y_test, y_pred))

for i in range(5):
    tree = model.estimators_[i]
    dot_data = export_graphviz(tree,
                               feature_names=X_train.columns,
                               filled=True,
                               max_depth=5,
                               impurity=False,
                               proportion=True)
    graph = graphviz.Source(dot_data)
    display(graph)